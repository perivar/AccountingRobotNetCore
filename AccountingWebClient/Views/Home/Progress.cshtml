@{
    ViewData["Title"] = "Progress";
}
<h2>@ViewData["Title"]</h2>

<div class="container">
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            User: <input type="text" id="userInput" />
        </div>
        <div class="col-6">
            Message: <input type="text" id="messageInput" />
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <code><ul id="messagesList"></ul></code>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/signalr/signalr.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/jobprogress")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        
        connection.on("ReceiveMessage", (user, message) => {
            const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            const encodedMsg = user + ": " + msg;
            const li = document.createElement("li");
            li.textContent = encodedMsg;
            document.getElementById("messagesList").appendChild(li);
        });

        connection.start()
            .then(_ => connection.invoke("AssociateJob", "@ViewBag.JobId"))
            .catch(err => console.error(err.toString()));


        document.getElementById("sendButton").addEventListener("click", event => {
            const user = document.getElementById("userInput").value;
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
            event.preventDefault();
        });
            
    </script>
}